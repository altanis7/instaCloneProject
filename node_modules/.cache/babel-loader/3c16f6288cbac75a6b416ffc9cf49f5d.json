{"ast":null,"code":"var _jsxFileName = \"/Users/moon/Desktop/React template/mini-project-insta/src/components/SignIn.jsx\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios'); // import { Button } from 'react-bootstrap';\n//목표: 정보들을 전송 시, 데이터 안의 정보들과 비교하여 ID 값과 비밀번호 값이 같다면, 로그인 성공 화면을 보여준다.\n// 1. 브라우저에서 전송을 한다.\n// 2. 전송된 데이터를 dataBase와 비교를 한다.\n// userInfo = {\"email\" : \"abcde@gmail.com\", \"userName\" : \"Kim\", \"userId\" : \"abcde\", \"password\" : \"123456\" }\n// 위의 객체는 우리가 로그인 화면에서 입력했을 시, 만들어주는 객체\n// 로그인 컴포넌트\n\n\nconst SignIn = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // 로그인 버튼 클릭 시, 실행되는 코드\n\n  const handleSubmit = e => {\n    axios.post('https://localhost:4000');\n  }; // input들에 태그에 변화가 일어나면, 실행되는 코드\n\n\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signIn_stage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signIn_title\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit(e);\n        },\n        name: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          // 첫 번째 input tag\n          placeholder: \"Phone number, username, or email\",\n          name: \"email\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // 두 번째 input tag\n          type: \"password\" // 브라우저에 패스워드를 가려줌\n          ,\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"or\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        children: \"Log in with Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question_password\",\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question_account\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question_account_text\",\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/SignUp\",\n        className: \"question_account_signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"downLoadLink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: \"Get the app.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"TxwIourD3ICffoynwRPIPxSS9IE=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn; // 이미지 링크\n\n{\n  /* <img src=\"https://www.pikpng.com/pngl/m/144-1445686_app-store-available-on-apple-google-store-logo.png\" alt=\"App Store - Available On Apple Google Store Logo Clipart@pikpng.com\"/>                     */\n}\n{\n  /* <img src = {\"https://play.google.com/intl/ko/badges/static/images/badges/ko_badge_web_generic.png\"} width = \"150\" height = \"110\" /> */\n} // const responseFacebook = (response) => { // Facebook 로그인 api를 사용하기 위한 코드\n//   console.log(response);\n// };\n// https://serverless-stack.com/chapters/redirect-on-login-and-logout.html\n// 스택오버플로우 \n// What is the best way to redirect a page using react-router\n// \n// https://stackoverflow.com/questions/45089386/what-is-the-best-way-to-redirect-a-page-using-react-router\n// 기존 요청 코드\n// fetch(`http://localhost:3000/${email}/${password}`) // 이메일, 패스워드를 보내는 방식을 바꿔야됨\n//       .then((response) => response.json())\n//       .then((result) => {\n//         console.log(result);\n//         if (result === true) {\n//           console.log(\"result is true\");\n//           history.push(\"/main\"); //history.push를 사용하여 내가 원하는 경로 창으로 이동\n//         } else {\n//           alert(\"로그인 정보가 틀렸습니다.\");\n//         }\n//       })\n//       .catch((error) => console.log(\"error\", error));\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/moon/Desktop/React template/mini-project-insta/src/components/SignIn.jsx"],"names":["React","useState","Link","useHistory","Modal","FacebookLogin","Button","axios","require","SignIn","history","email","setEmail","password","setPassword","handleSubmit","e","post","handleChange","target","name","value","preventDefault"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { Button } from \"@material-ui/core\";\nconst axios = require('axios')\n// import { Button } from 'react-bootstrap';\n\n//목표: 정보들을 전송 시, 데이터 안의 정보들과 비교하여 ID 값과 비밀번호 값이 같다면, 로그인 성공 화면을 보여준다.\n// 1. 브라우저에서 전송을 한다.\n// 2. 전송된 데이터를 dataBase와 비교를 한다.\n\n// userInfo = {\"email\" : \"abcde@gmail.com\", \"userName\" : \"Kim\", \"userId\" : \"abcde\", \"password\" : \"123456\" }\n// 위의 객체는 우리가 로그인 화면에서 입력했을 시, 만들어주는 객체\n\n// 로그인 컴포넌트\nconst SignIn = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // 로그인 버튼 클릭 시, 실행되는 코드\n  const handleSubmit = (e) => {\n    axios.post('https://localhost:4000')\n  };\n\n  // input들에 태그에 변화가 일어나면, 실행되는 코드\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"signIn_stage\">\n        <div className=\"signIn_title\">Instagram</div>\n        <form\n          className=\"form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit(e);\n          }}\n          name=\"loginform\"\n        >\n          <input // 첫 번째 input tag\n            placeholder=\"Phone number, username, or email\"\n            name=\"email\"\n            onChange={(e) => {\n              handleChange(e);\n            }}\n          />\n          <input // 두 번째 input tag\n            type=\"password\" // 브라우저에 패스워드를 가려줌\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={(e) => {\n              handleChange(e);\n            }}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Log in\n          </Button>\n        </form>\n        <div className=\"orLine\">\n          <div className=\"line\"></div>\n          <span className=\"or\">OR</span>\n          <div className=\"line\"></div>\n        </div>\n        <Button color=\"primary\">Log in with Facebook</Button>\n        <p className=\"question_password\">Forgot password?</p>\n      </div>\n      <div className=\"question_account\">\n        <span className=\"question_account_text\">Don't have an account?</span>\n        <Link to=\"/SignUp\" className=\"question_account_signup\">\n          Sign up\n        </Link>\n      </div>\n      <div className=\"downLoadLink\"></div>\n\n      <footer className=\"footer\">Get the app.</footer>\n    </div>\n  );\n};\n\nexport default SignIn;\n\n// 이미지 링크\n{\n  /* <img src=\"https://www.pikpng.com/pngl/m/144-1445686_app-store-available-on-apple-google-store-logo.png\" alt=\"App Store - Available On Apple Google Store Logo Clipart@pikpng.com\"/>                     */\n}\n{\n  /* <img src = {\"https://play.google.com/intl/ko/badges/static/images/badges/ko_badge_web_generic.png\"} width = \"150\" height = \"110\" /> */\n}\n\n// const responseFacebook = (response) => { // Facebook 로그인 api를 사용하기 위한 코드\n//   console.log(response);\n// };\n\n\n\n// https://serverless-stack.com/chapters/redirect-on-login-and-logout.html\n// 스택오버플로우 \n// What is the best way to redirect a page using react-router\n// \n// https://stackoverflow.com/questions/45089386/what-is-the-best-way-to-redirect-a-page-using-react-router\n\n\n\n\n// 기존 요청 코드\n// fetch(`http://localhost:3000/${email}/${password}`) // 이메일, 패스워드를 보내는 방식을 바꿔야됨\n//       .then((response) => response.json())\n//       .then((result) => {\n//         console.log(result);\n//         if (result === true) {\n//           console.log(\"result is true\");\n//           history.push(\"/main\"); //history.push를 사용하여 내가 원하는 경로 창으로 이동\n//         } else {\n//           alert(\"로그인 정보가 틀렸습니다.\");\n//         }\n//       })\n//       .catch((error) => console.log(\"error\", error));"]},"metadata":{},"sourceType":"module"}