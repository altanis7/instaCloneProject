{"ast":null,"code":"var _jsxFileName = \"/Users/moon/Desktop/React template/mini-project-insta/src/components/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport FacebookLogin from 'react-facebook-login'; //목표: 정보들을 전송 시, 데이터 안의 정보들과 비교하여 ID 값과 비밀번호 값이 같다면, 로그인 성공 화면을 보여준다.\n// 1. 브라우저에서 전송을 한다.\n// 2. 전송된 데이터를 dataBase와 비교를 한다.\n// userInfo = {\"email\" : \"abcde@gmail.com\", \"userName\" : \"Kim\", \"userId\" : \"abcde\", \"password\" : \"123456\" }\n// 위의 객체는 우리가 로그인 화면에서 입력했을 시, 만들어주는 객체\n//위의 객체를 데이터베이스 배열에 돌려서 \n// const successId = dataBase.filter(data => data === userInfo)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [modal, setModal] = useState(true);\n\n  const responseFacebook = response => {\n    console.log(response);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // // if(dataBase.filter((el)=>el.email === email).length >= 1 && dataBase.filter((el) => el.password === password).length >= 1) {\n    //     if(dataBase.find((el)=> el.email === email) !== undefined && dataBase.find((el)=> el.password === password) !== undefined){\n    //   console.log('로그인 성공하셨습니다.') \n    // } else {\n    //   console.log('잘못 입력하셨습니다.')\n    // }\n\n    fetch(`http://localhost:3000/${email}/${password}`).then(response => response.json()).then(result => {\n      if (result === true) {\n        history.push(\"/main\"); //push로 하면 내가 원하는 경로 창으로 이동 , Link를 했을 때는 버튼을 클릭해서 이동\n        // history.goBack(); //뒤로가기\n      } else {\n        console.log('hi');\n      }\n    }).catch(error => console.log('error', error));\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'email') {\n      setEmail(e.target.value);\n    } else if (e.target.name === 'password') {\n      setPassword(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stage\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        name: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC804\\uD654\\uBC88\\uD638, \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\",\n          name: \"email\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          name: \"password\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"-------------------\\uB610\\uB294------------------\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n        appId: \"1563531103731025\" // facebook developer 페이지에 생성한 앱의 아이디\n        ,\n        autoLoad: false,\n        fields: \"name,email,picture\" // 페이스북에서 가져올 필드\n        ,\n        cssClass: formStyles.facebookLink // 사용할 스타일\n        ,\n        callback: props.handleFacebookLogin // 콜백함수 지정( container에 생성 )\n        ,\n        icon: \"fa-facebook-square\" // 아이콘 지정\n        ,\n        textButton: context.t('Log in with Facebook') // 버튼에 표시할 텍스트\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Don't have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/SignUp\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"downLoadLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"App Store\\uC5D0\\uC11C \\uB2E4\\uC6B4\\uB85C\\uB4DC \\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uAD6C\\uAE00 \\uD50C\\uB808\\uC774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: \"\\uAC1C\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"3UVzUBWNpdQL9Kw++DvYmNUKMDc=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/moon/Desktop/React template/mini-project-insta/src/components/SignIn.jsx"],"names":["React","useState","Link","useHistory","Modal","FacebookLogin","SignIn","history","email","setEmail","password","setPassword","modal","setModal","responseFacebook","response","console","log","handleSubmit","e","preventDefault","fetch","then","json","result","push","catch","error","handleChange","target","name","value","formStyles","facebookLink","props","handleFacebookLogin","context","t"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Link,useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\"\nimport FacebookLogin from 'react-facebook-login';\n\n\n//목표: 정보들을 전송 시, 데이터 안의 정보들과 비교하여 ID 값과 비밀번호 값이 같다면, 로그인 성공 화면을 보여준다.\n\n// 1. 브라우저에서 전송을 한다.\n// 2. 전송된 데이터를 dataBase와 비교를 한다.\n\n// userInfo = {\"email\" : \"abcde@gmail.com\", \"userName\" : \"Kim\", \"userId\" : \"abcde\", \"password\" : \"123456\" }\n// 위의 객체는 우리가 로그인 화면에서 입력했을 시, 만들어주는 객체\n\n//위의 객체를 데이터베이스 배열에 돌려서 \n// const successId = dataBase.filter(data => data === userInfo)\n\n\nconst SignIn = () => {\n    const history = useHistory();\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [modal, setModal] = useState(true)\n\n    const responseFacebook = (response) => {\n        console.log(response);\n      }\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        // // if(dataBase.filter((el)=>el.email === email).length >= 1 && dataBase.filter((el) => el.password === password).length >= 1) {\n        //     if(dataBase.find((el)=> el.email === email) !== undefined && dataBase.find((el)=> el.password === password) !== undefined){\n        //   console.log('로그인 성공하셨습니다.') \n        // } else {\n        //   console.log('잘못 입력하셨습니다.')\n        // }\n        \n        fetch(`http://localhost:3000/${email}/${password}`)\n            .then(response => response.json())\n            .then(result => {\n                if(result === true){\n                    history.push(\"/main\");  //push로 하면 내가 원하는 경로 창으로 이동 , Link를 했을 때는 버튼을 클릭해서 이동\n                    // history.goBack(); //뒤로가기\n                } else {\n                    console.log('hi')\n            }})\n            .catch(error => console.log('error', error));\n\n    }\n\n    const handleChange = (e) => {\n        if(e.target.name === 'email') {\n            setEmail(e.target.value)\n        } else if(e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n    }\n    \n    return (\n        <div className=\"body\">\n             <div className=\"stage\">  {/* 회원가입 폼 감싸있는 태그 */}\n                 <div className=\"title\">Instagram</div>\n                 <form className=\"form\" onSubmit={handleSubmit} name = \"loginform\">\n                     <input placeholder=\"전화번호, 사용자 이름 또는 이메일\" name=\"email\" onChange ={((e) => {handleChange(e)})}></input>\n                     <input  type= \"password\"placeholder=\"비밀번호\" name=\"password\" onChange={((e) => {handleChange(e)})}></input>\n                        <button type=\"submit\" >로그인</button>\n                     \n                     {/* {data} */}\n                 </form>\n                <div>-------------------또는------------------</div>\n                  {/* <FacebookLogin\n                    appId=\"1088597931155576\"\n                    autoLoad={true}\n                    fields=\"name,email,picture\"\n                    callback={responseFacebook}\n                    cssClass=\"my-facebook-button-class\"\n                    icon=\"fa-facebook\"\n                    /> */}\n                    <FacebookLogin\n   appId=\"1563531103731025\"  // facebook developer 페이지에 생성한 앱의 아이디\n   autoLoad={false}\n   fields=\"name,email,picture\"    // 페이스북에서 가져올 필드\n   cssClass={formStyles.facebookLink}    // 사용할 스타일\n   callback={props.handleFacebookLogin}    // 콜백함수 지정( container에 생성 )\n   icon=\"fa-facebook-square\"        // 아이콘 지정\n   textButton={context.t('Log in with Facebook')}    // 버튼에 표시할 텍스트\n/>\n                 <div>Forgot password?</div>\n                 <div> Don't have an account?\n                     <Link to =\"/SignUp\">Sign up</Link>\n                 </div>\n                 <div className=\"downLoadLink\">\n                     <button>App Store에서 다운로드 하기</button><button>구글 플레이</button>\n                 </div>\n                 <footer>개요</footer>  \n             </div>\n             \n         </div>\n     )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}